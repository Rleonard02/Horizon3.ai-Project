# docker-compose.yml

version: '3.8'

services:
  # Nginx Frontend
  nginx:
    image: nginx:latest
    container_name: myproject-nginx
    volumes:
      - ./nginx_conf:/etc/nginx/conf.d
    ports:
      - "80:80"
    depends_on:
      - webhook-creator
      - webhook-receiver
    networks:
      - webnet

  # Webhook Creator
  webhook-creator:
    build: ./webhook-creator
    container_name: myproject-webhook-creator
    environment:
      - WEBHOOK_URL=http://webhook-receiver:5001/webhook
      - AUTH_TOKEN=your_auth_token_here
    networks:
      - webnet

  # Webhook Receiver
  webhook-receiver:
    build: ./webhook-receiver
    container_name: myproject-webhook-receiver
    ports:
      - "5001:5001"
    volumes:
      - ./binary_diff_module/shared_data:/bin_shared
      - ./sonarqube_module/shared_data:/sonarqube_shared
    networks:
      - webnet

  # Binary Analysis Module
  # binary-analysis:
  #   build: ./binary_diff_module
  #   container_name: myproject-binary-analysis
  #   volumes:
  #     - ./binary_diff_module/shared_data:/bin_shared
  #     - ~/.kube/config:/root/.kube/config:ro
  #     - ./binary_diff_module/kubernetes:/bin_app/kubernetes
  #   networks:
  #     - webnet
  #   depends_on:
  #     - webhook-receiver
  #   restart: unless-stopped



  # LLM Module
  llm-module:
    build: ./LLM_Modules/Llama3.2_11B
    container_name: myproject-llm-module
    volumes:
      # - ./binary_diff_module/shared_data:/bin_shared
      - ./sonarqube_module/shared_data:/sonarqube_shared
    environment:
      - HUGGINGFACE_API_TOKEN=${HUGGINGFACE_API_TOKEN}
    networks:
      - webnet
    depends_on:
      # - binary-analysis
      - sonarqube
    restart: unless-stopped

  # API Service
  api-service:
    build: ./api_service
    container_name: myproject-api-service
    ports:
      - "8000:8000"
    volumes:
      - ./binary_diff_module/shared_data/output:/bin_shared/output
      - ./sonarqube_module/shared_data/output:/sonarqube_shared/output
    networks:
      - webnet
    restart: unless-stopped
    environment:
      - SONARQUBE_TOKEN=${SONARQUBE_TOKEN}

  # Frontend Service
  frontend:
    build: ./frontend
    container_name: myproject-frontend
    ports:
      - "3000:80"
    networks:
      - webnet
    depends_on:
      - api-service
    restart: unless-stopped

  sonarqube:
    image: sonarqube:lts-community
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    depends_on:
      - db
    networks:
      - analysis_network

  sonarqube-analysis:
    build: 
      context: ./sonarqube_module
      dockerfile: Dockerfile
    container_name: sonarqube-analysis
    volumes:
      - ./sonarqube_module/scripts:/scripts 
      - ./sonarqube_module/shared_data:/sonarqube_shared 
      - ./sonarqube_module/shared_data/output:/sonarqube_shared/output
      - ./sonarqube_module/scripts:/sonarqube_app/scripts
      - ./sonarqube_module/.sonarqube_env:/sonarqube_app/.sonarqube_env
    entrypoint: ["bash", "./scripts/entrypoint.sh"]  # Script to run
    depends_on:
      - sonarqube
    networks:
      - analysis_network
    restart: "no"  # Prevent restarting after completion
    environment:
      - SONARQUBE_TOKEN
      - SONARQUBE_URL=http://sonarqube:9000
      - SONARQUBE_ADMIN_USERNAME=admin
      - SONARQUBE_ADMIN_PASSWORD=admin


  db:
    image: postgres:12
    container_name: sonarqube_db
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - sonar_db:/var/lib/postgresql/data
    networks:
      - analysis_network

    
  
networks:
  webnet:
    driver: bridge
  analysis_network:
    driver: bridge

volumes:
  sonar_db:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
